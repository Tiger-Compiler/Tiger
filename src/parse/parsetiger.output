Terminals unused in grammar

    "_cast"
    "class"
    "extends"
    "import"
    "method"
    "new"


State 2 conflicts: 1 reduce/reduce
State 76 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 100 conflicts: 13 shift/reduce
State 111 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: exp
    2        | chunks

    3 exps: ε
    4     | exp exps.aux

    5 exps.aux: ε
    6         | ";" exp exps.aux

    7 exp: "integer"
    8    | "nil"
    9    | "string"
   10    | typeid "[" exp "]" "of" exp
   11    | typeid "{" exp.1 "}"
   12    | lvalue
   13    | "identifier" "(" exp3 ")"
   14    | "-" exp
   15    | exp "+" exp
   16    | exp "-" exp
   17    | exp "/" exp
   18    | exp "=" exp
   19    | exp "<>" exp
   20    | exp ">" exp
   21    | exp "<" exp
   22    | exp ">=" exp
   23    | exp "<=" exp
   24    | exp "&" exp
   25    | exp "|" exp
   26    | exp "*" exp
   27    | "(" exps ")"
   28    | lvalue ":=" exp
   29    | "if" exp "then" exp elserule
   30    | "while" exp "do" exp
   31    | "for" "identifier" ":=" exp "to" exp "do" exp
   32    | "break"
   33    | "let" chunks "in" exps "end"

   34 elserule: ε
   35         | "else" exp

   36 exp.1: ε
   37      | "identifier" "=" exp exp.2

   38 exp.2: ε
   39      | "," "identifier" "=" exp exp.2

   40 lvalue: "identifier"
   41       | lvalue "." "identifier"
   42       | lvalue "[" exp "]"

   43 exp3: ε
   44     | exp exp3.1

   45 exp3.1: ε
   46       | "," exp exp3.1

   47 chunks: ε
   48       | tychunk chunks
   49       | funchunk
   50       | vardec

   51 tychunk: tydec
   52        | tydec tychunk

   53 tydec: "type" "identifier" "=" ty

   54 ty: typeid
   55   | "{" tyfields "}"
   56   | "array" "of" typeid

   57 tyfields: ε
   58         | tyfields.1

   59 tyfields.1: tyfields.1 "," tyfield
   60           | tyfield

   61 tyfield: "identifier" ":" typeid

   62 typeid: "identifier"
   63       | "_namety" "(" "integer" ")"

   64 vardec: "var" "identifier" colontypeid ":=" exp

   65 funchunk: "function" "identifier" "(" tyfields ")" colontypeid "=" exp
   66         | "primitive" "identifier" "(" tyfields ")" colontypeid

   67 colontypeid: ε
   68            | ":" typeid


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "string" <std::string> (258) 9
    "identifier" <misc::symbol> (259) 13 31 37 39 40 41 53 61 62 64 65 66
    "integer" <int> (260) 7 63
    "&" (261) 24
    "array" (262) 56
    ":=" (263) 28 31 64
    "break" (264) 32
    "_cast" (265)
    "class" (266)
    ":" (267) 61 68
    "," (268) 39 46 59
    "/" (269) 17
    "do" (270) 30 31
    "." (271) 41
    "else" (272) 35
    "end" (273) 33
    "=" (274) 18 37 39 53 65
    "extends" (275)
    "for" (276) 31
    "function" (277) 65
    ">=" (278) 22
    ">" (279) 20
    "if" (280) 29
    "import" (281)
    "in" (282) 33
    "{" (283) 11 55
    "[" (284) 10 42
    "<=" (285) 23
    "let" (286) 33
    "(" (287) 13 27 63 65 66
    "<" (288) 21
    "-" (289) 14 16
    "method" (290)
    "<>" (291) 19
    "new" (292)
    "nil" (293) 8
    "of" (294) 10 56
    "|" (295) 25
    "+" (296) 15
    "primitive" (297) 66
    "}" (298) 11 55
    "]" (299) 10 42
    ")" (300) 13 27 63 65 66
    ";" (301) 6
    "then" (302) 29
    "*" (303) 26
    "to" (304) 31
    "type" (305) 53
    "var" (306) 64
    "while" (307) 30
    "_chunks" (308)
    "_namety" (309) 63


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program (56)
        on left: 1 2
        on right: 0
    exps (57)
        on left: 3 4
        on right: 27 33
    exps.aux (58)
        on left: 5 6
        on right: 4 6
    exp (59)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
        on right: 1 4 6 10 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 31 35 37 39 42 44 46 64 65
    elserule (60)
        on left: 34 35
        on right: 29
    exp.1 (61)
        on left: 36 37
        on right: 11
    exp.2 (62)
        on left: 38 39
        on right: 37 39
    lvalue (63)
        on left: 40 41 42
        on right: 12 28 41 42
    exp3 (64)
        on left: 43 44
        on right: 13
    exp3.1 (65)
        on left: 45 46
        on right: 44 46
    chunks (66)
        on left: 47 48 49 50
        on right: 2 33 48
    tychunk (67)
        on left: 51 52
        on right: 48 52
    tydec (68)
        on left: 53
        on right: 51 52
    ty (69)
        on left: 54 55 56
        on right: 53
    tyfields (70)
        on left: 57 58
        on right: 55 65 66
    tyfields.1 (71)
        on left: 59 60
        on right: 58 59
    tyfield (72)
        on left: 61
        on right: 59 60
    typeid (73)
        on left: 62 63
        on right: 10 11 54 56 61 68
    vardec (74)
        on left: 64
        on right: 50
    funchunk (75)
        on left: 65 66
        on right: 49
    colontypeid (76)
        on left: 67 68
        on right: 64 65 66


State 0

    0 $accept: • program "end of file"
    1 program: • exp
    2        | • chunks
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   47 chunks: ε •  ["end of file"]
   48       | • tychunk chunks
   49       | • funchunk
   50       | • vardec
   51 tychunk: • tydec
   52        | • tydec tychunk
   53 tydec: • "type" "identifier" "=" ty
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"
   64 vardec: • "var" "identifier" colontypeid ":=" exp
   65 funchunk: • "function" "identifier" "(" tyfields ")" colontypeid "=" exp
   66         | • "primitive" "identifier" "(" tyfields ")" colontypeid

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "function"    shift, and go to state 6
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "primitive"   shift, and go to state 12
    "type"        shift, and go to state 13
    "var"         shift, and go to state 14
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    $default  reduce using rule 47 (chunks)

    program   go to state 17
    exp       go to state 18
    lvalue    go to state 19
    chunks    go to state 20
    tychunk   go to state 21
    tydec     go to state 22
    typeid    go to state 23
    vardec    go to state 24
    funchunk  go to state 25


State 1

    9 exp: "string" •

    $default  reduce using rule 9 (exp)


State 2

   13 exp: "identifier" • "(" exp3 ")"
   40 lvalue: "identifier" •  ["end of file", "&", ":=", ",", "/", "do", ".", "else", "end", "=", ">=", ">", "in", "[", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "*", "to"]
   62 typeid: "identifier" •  ["{", "["]

    "("  shift, and go to state 26

    "{"       reduce using rule 62 (typeid)
    "["       reduce using rule 40 (lvalue)
    "["       [reduce using rule 62 (typeid)]
    $default  reduce using rule 40 (lvalue)

    reduce/reduce conflict on token "[":
       40 lvalue: "identifier" •
       62 typeid: "identifier" •
      First example: "identifier" • "[" exp "]" "end of file"
      First reduce derivation
        $accept
        ↳ 0: program                                           "end of file"
             ↳ 1: exp
                  ↳ 12: lvalue
                        ↳ 42: lvalue               "[" exp "]"
                              ↳ 40: "identifier" •
      Second example: "identifier" • "[" exp "]" "of" exp "end of file"
      Second reduce derivation
        $accept
        ↳ 0: program                                              "end of file"
             ↳ 1: exp
                  ↳ 10: typeid               "[" exp "]" "of" exp
                        ↳ 62: "identifier" •



State 3

    7 exp: "integer" •

    $default  reduce using rule 7 (exp)


State 4

   32 exp: "break" •

    $default  reduce using rule 32 (exp)


State 5

   31 exp: "for" • "identifier" ":=" exp "to" exp "do" exp

    "identifier"  shift, and go to state 27


State 6

   65 funchunk: "function" • "identifier" "(" tyfields ")" colontypeid "=" exp

    "identifier"  shift, and go to state 28


State 7

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   29    | "if" • exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 29
    lvalue  go to state 19
    typeid  go to state 23


State 8

   33 exp: "let" • chunks "in" exps "end"
   47 chunks: ε •  ["in"]
   48       | • tychunk chunks
   49       | • funchunk
   50       | • vardec
   51 tychunk: • tydec
   52        | • tydec tychunk
   53 tydec: • "type" "identifier" "=" ty
   64 vardec: • "var" "identifier" colontypeid ":=" exp
   65 funchunk: • "function" "identifier" "(" tyfields ")" colontypeid "=" exp
   66         | • "primitive" "identifier" "(" tyfields ")" colontypeid

    "function"   shift, and go to state 6
    "primitive"  shift, and go to state 12
    "type"       shift, and go to state 13
    "var"        shift, and go to state 14

    $default  reduce using rule 47 (chunks)

    chunks    go to state 30
    tychunk   go to state 21
    tydec     go to state 22
    vardec    go to state 24
    funchunk  go to state 25


State 9

    3 exps: ε •  [")"]
    4     | • exp exps.aux
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   27    | "(" • exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    $default  reduce using rule 3 (exps)

    exps    go to state 31
    exp     go to state 32
    lvalue  go to state 19
    typeid  go to state 23


State 10

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   14    | "-" • exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 33
    lvalue  go to state 19
    typeid  go to state 23


State 11

    8 exp: "nil" •

    $default  reduce using rule 8 (exp)


State 12

   66 funchunk: "primitive" • "identifier" "(" tyfields ")" colontypeid

    "identifier"  shift, and go to state 34


State 13

   53 tydec: "type" • "identifier" "=" ty

    "identifier"  shift, and go to state 35


State 14

   64 vardec: "var" • "identifier" colontypeid ":=" exp

    "identifier"  shift, and go to state 36


State 15

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   30    | "while" • exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 37
    lvalue  go to state 19
    typeid  go to state 23


State 16

   63 typeid: "_namety" • "(" "integer" ")"

    "("  shift, and go to state 38


State 17

    0 $accept: program • "end of file"

    "end of file"  shift, and go to state 39


State 18

    1 program: exp •  ["end of file"]
   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 1 (program)


State 19

   12 exp: lvalue •  ["end of file", "&", ",", "/", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "*", "to"]
   28    | lvalue • ":=" exp
   41 lvalue: lvalue • "." "identifier"
   42       | lvalue • "[" exp "]"

    ":="  shift, and go to state 52
    "."   shift, and go to state 53
    "["   shift, and go to state 54

    $default  reduce using rule 12 (exp)


State 20

    2 program: chunks •

    $default  reduce using rule 2 (program)


State 21

   47 chunks: ε •  ["end of file", "in"]
   48       | • tychunk chunks
   48       | tychunk • chunks
   49       | • funchunk
   50       | • vardec
   51 tychunk: • tydec
   52        | • tydec tychunk
   53 tydec: • "type" "identifier" "=" ty
   64 vardec: • "var" "identifier" colontypeid ":=" exp
   65 funchunk: • "function" "identifier" "(" tyfields ")" colontypeid "=" exp
   66         | • "primitive" "identifier" "(" tyfields ")" colontypeid

    "function"   shift, and go to state 6
    "primitive"  shift, and go to state 12
    "type"       shift, and go to state 13
    "var"        shift, and go to state 14

    $default  reduce using rule 47 (chunks)

    chunks    go to state 55
    tychunk   go to state 21
    tydec     go to state 22
    vardec    go to state 24
    funchunk  go to state 25


State 22

   51 tychunk: • tydec
   51        | tydec •  ["end of file", "function", "in", "primitive", "var"]
   52        | • tydec tychunk
   52        | tydec • tychunk
   53 tydec: • "type" "identifier" "=" ty

    "type"  shift, and go to state 13

    $default  reduce using rule 51 (tychunk)

    tychunk  go to state 56
    tydec    go to state 22

    Conflict between rule 51 and token "type" resolved as shift ("_chunks" < "type").


State 23

   10 exp: typeid • "[" exp "]" "of" exp
   11    | typeid • "{" exp.1 "}"

    "{"  shift, and go to state 57
    "["  shift, and go to state 58


State 24

   50 chunks: vardec •

    $default  reduce using rule 50 (chunks)


State 25

   49 chunks: funchunk •

    $default  reduce using rule 49 (chunks)


State 26

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   13    | "identifier" "(" • exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   43 exp3: ε •  [")"]
   44     | • exp exp3.1
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    $default  reduce using rule 43 (exp3)

    exp     go to state 59
    lvalue  go to state 19
    exp3    go to state 60
    typeid  go to state 23


State 27

   31 exp: "for" "identifier" • ":=" exp "to" exp "do" exp

    ":="  shift, and go to state 61


State 28

   65 funchunk: "function" "identifier" • "(" tyfields ")" colontypeid "=" exp

    "("  shift, and go to state 62


State 29

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   29    | "if" exp • "then" exp elserule

    "&"     shift, and go to state 40
    "/"     shift, and go to state 41
    "="     shift, and go to state 42
    ">="    shift, and go to state 43
    ">"     shift, and go to state 44
    "<="    shift, and go to state 45
    "<"     shift, and go to state 46
    "-"     shift, and go to state 47
    "<>"    shift, and go to state 48
    "|"     shift, and go to state 49
    "+"     shift, and go to state 50
    "then"  shift, and go to state 63
    "*"     shift, and go to state 51


State 30

   33 exp: "let" chunks • "in" exps "end"

    "in"  shift, and go to state 64


State 31

   27 exp: "(" exps • ")"

    ")"  shift, and go to state 65


State 32

    4 exps: exp • exps.aux
    5 exps.aux: ε •  ["end", ")"]
    6         | • ";" exp exps.aux
   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    ";"   shift, and go to state 66
    "*"   shift, and go to state 51

    $default  reduce using rule 5 (exps.aux)

    exps.aux  go to state 67


State 33

   14 exp: "-" exp •  ["end of file", "&", ",", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "to"]
   15    | exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "*"  shift, and go to state 51

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 14 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 14 and token "=" resolved as reduce ("=" < "-").
    Conflict between rule 14 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 14 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 14 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 14 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 14 and token "-" resolved as reduce (%left "-").
    Conflict between rule 14 and token "<>" resolved as reduce ("<>" < "-").
    Conflict between rule 14 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 14 and token "+" resolved as reduce (%left "+").
    Conflict between rule 14 and token "*" resolved as shift ("-" < "*").


State 34

   66 funchunk: "primitive" "identifier" • "(" tyfields ")" colontypeid

    "("  shift, and go to state 68


State 35

   53 tydec: "type" "identifier" • "=" ty

    "="  shift, and go to state 69


State 36

   64 vardec: "var" "identifier" • colontypeid ":=" exp
   67 colontypeid: ε •  [":="]
   68            | • ":" typeid

    ":"  shift, and go to state 70

    $default  reduce using rule 67 (colontypeid)

    colontypeid  go to state 71


State 37

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   30    | "while" exp • "do" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "do"  shift, and go to state 72
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51


State 38

   63 typeid: "_namety" "(" • "integer" ")"

    "integer"  shift, and go to state 73


State 39

    0 $accept: program "end of file" •

    $default  accept


State 40

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   24    | exp "&" • exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 74
    lvalue  go to state 19
    typeid  go to state 23


State 41

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   17    | exp "/" • exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 75
    lvalue  go to state 19
    typeid  go to state 23


State 42

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   18    | exp "=" • exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 76
    lvalue  go to state 19
    typeid  go to state 23


State 43

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   22    | exp ">=" • exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 77
    lvalue  go to state 19
    typeid  go to state 23


State 44

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   20    | exp ">" • exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 78
    lvalue  go to state 19
    typeid  go to state 23


State 45

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   23    | exp "<=" • exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 79
    lvalue  go to state 19
    typeid  go to state 23


State 46

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   21    | exp "<" • exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 80
    lvalue  go to state 19
    typeid  go to state 23


State 47

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   16    | exp "-" • exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 81
    lvalue  go to state 19
    typeid  go to state 23


State 48

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   19    | exp "<>" • exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 82
    lvalue  go to state 19
    typeid  go to state 23


State 49

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   25    | exp "|" • exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 83
    lvalue  go to state 19
    typeid  go to state 23


State 50

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   15    | exp "+" • exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 84
    lvalue  go to state 19
    typeid  go to state 23


State 51

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   26    | exp "*" • exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 85
    lvalue  go to state 19
    typeid  go to state 23


State 52

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   28    | lvalue ":=" • exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 86
    lvalue  go to state 19
    typeid  go to state 23


State 53

   41 lvalue: lvalue "." • "identifier"

    "identifier"  shift, and go to state 87


State 54

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   42       | lvalue "[" • exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 88
    lvalue  go to state 19
    typeid  go to state 23


State 55

   48 chunks: tychunk chunks •

    $default  reduce using rule 48 (chunks)


State 56

   52 tychunk: tydec tychunk •

    $default  reduce using rule 52 (tychunk)


State 57

   11 exp: typeid "{" • exp.1 "}"
   36 exp.1: ε •  ["}"]
   37      | • "identifier" "=" exp exp.2

    "identifier"  shift, and go to state 89

    $default  reduce using rule 36 (exp.1)

    exp.1  go to state 90


State 58

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   10    | typeid "[" • exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 91
    lvalue  go to state 19
    typeid  go to state 23


State 59

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   44 exp3: exp • exp3.1
   45 exp3.1: ε •  [")"]
   46       | • "," exp exp3.1

    "&"   shift, and go to state 40
    ","   shift, and go to state 92
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 45 (exp3.1)

    exp3.1  go to state 93


State 60

   13 exp: "identifier" "(" exp3 • ")"

    ")"  shift, and go to state 94


State 61

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   31    | "for" "identifier" ":=" • exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 95
    lvalue  go to state 19
    typeid  go to state 23


State 62

   57 tyfields: ε •  [")"]
   58         | • tyfields.1
   59 tyfields.1: • tyfields.1 "," tyfield
   60           | • tyfield
   61 tyfield: • "identifier" ":" typeid
   65 funchunk: "function" "identifier" "(" • tyfields ")" colontypeid "=" exp

    "identifier"  shift, and go to state 96

    $default  reduce using rule 57 (tyfields)

    tyfields    go to state 97
    tyfields.1  go to state 98
    tyfield     go to state 99


State 63

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   29    | "if" exp "then" • exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 100
    lvalue  go to state 19
    typeid  go to state 23


State 64

    3 exps: ε •  ["end"]
    4     | • exp exps.aux
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   33    | "let" chunks "in" • exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    $default  reduce using rule 3 (exps)

    exps    go to state 101
    exp     go to state 32
    lvalue  go to state 19
    typeid  go to state 23


State 65

   27 exp: "(" exps ")" •

    $default  reduce using rule 27 (exp)


State 66

    6 exps.aux: ";" • exp exps.aux
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 102
    lvalue  go to state 19
    typeid  go to state 23


State 67

    4 exps: exp exps.aux •

    $default  reduce using rule 4 (exps)


State 68

   57 tyfields: ε •  [")"]
   58         | • tyfields.1
   59 tyfields.1: • tyfields.1 "," tyfield
   60           | • tyfield
   61 tyfield: • "identifier" ":" typeid
   66 funchunk: "primitive" "identifier" "(" • tyfields ")" colontypeid

    "identifier"  shift, and go to state 96

    $default  reduce using rule 57 (tyfields)

    tyfields    go to state 103
    tyfields.1  go to state 98
    tyfield     go to state 99


State 69

   53 tydec: "type" "identifier" "=" • ty
   54 ty: • typeid
   55   | • "{" tyfields "}"
   56   | • "array" "of" typeid
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 104
    "array"       shift, and go to state 105
    "{"           shift, and go to state 106
    "_namety"     shift, and go to state 16

    ty      go to state 107
    typeid  go to state 108


State 70

   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"
   68 colontypeid: ":" • typeid

    "identifier"  shift, and go to state 104
    "_namety"     shift, and go to state 16

    typeid  go to state 109


State 71

   64 vardec: "var" "identifier" colontypeid • ":=" exp

    ":="  shift, and go to state 110


State 72

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   30    | "while" exp "do" • exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 111
    lvalue  go to state 19
    typeid  go to state 23


State 73

   63 typeid: "_namety" "(" "integer" • ")"

    ")"  shift, and go to state 112


State 74

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   24    | exp "&" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"   shift, and go to state 41
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 24 (exp)

    Conflict between rule 24 and token "&" resolved as reduce (%left "&").
    Conflict between rule 24 and token "/" resolved as shift ("&" < "/").
    Conflict between rule 24 and token "=" resolved as reduce ("=" < "&").
    Conflict between rule 24 and token ">=" resolved as shift ("&" < ">=").
    Conflict between rule 24 and token ">" resolved as shift ("&" < ">").
    Conflict between rule 24 and token "<=" resolved as shift ("&" < "<=").
    Conflict between rule 24 and token "<" resolved as shift ("&" < "<").
    Conflict between rule 24 and token "-" resolved as shift ("&" < "-").
    Conflict between rule 24 and token "<>" resolved as shift ("&" < "<>").
    Conflict between rule 24 and token "|" resolved as reduce ("|" < "&").
    Conflict between rule 24 and token "+" resolved as shift ("&" < "+").
    Conflict between rule 24 and token "*" resolved as shift ("&" < "*").


State 75

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   17    | exp "/" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "*", "to"]
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    $default  reduce using rule 17 (exp)

    Conflict between rule 17 and token "&" resolved as reduce ("&" < "/").
    Conflict between rule 17 and token "/" resolved as reduce (%left "/").
    Conflict between rule 17 and token "=" resolved as reduce ("=" < "/").
    Conflict between rule 17 and token ">=" resolved as reduce (">=" < "/").
    Conflict between rule 17 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 17 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 17 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 17 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 17 and token "<>" resolved as reduce ("<>" < "/").
    Conflict between rule 17 and token "|" resolved as reduce ("|" < "/").
    Conflict between rule 17 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 17 and token "*" resolved as reduce (%left "*").


State 76

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   18    | exp "=" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "}", "]", ")", ";", "then", "to"]
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    "="       [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)

    Conflict between rule 18 and token "&" resolved as shift ("=" < "&").
    Conflict between rule 18 and token "/" resolved as shift ("=" < "/").
    Conflict between rule 18 and token ">=" resolved as shift ("=" < ">=").
    Conflict between rule 18 and token ">" resolved as shift ("=" < ">").
    Conflict between rule 18 and token "<=" resolved as shift ("=" < "<=").
    Conflict between rule 18 and token "<" resolved as shift ("=" < "<").
    Conflict between rule 18 and token "-" resolved as shift ("=" < "-").
    Conflict between rule 18 and token "<>" resolved as shift ("=" < "<>").
    Conflict between rule 18 and token "|" resolved as shift ("=" < "|").
    Conflict between rule 18 and token "+" resolved as shift ("=" < "+").
    Conflict between rule 18 and token "*" resolved as shift ("=" < "*").

    shift/reduce conflict on token "=":
       18 exp: exp "=" exp •
       18 exp: exp • "=" exp
      Example: exp "=" exp • "=" exp
      Shift derivation
        exp
        ↳ 18: exp "=" exp
                      ↳ 18: exp • "=" exp
      Reduce derivation
        exp
        ↳ 18: exp                 "=" exp
              ↳ 18: exp "=" exp •



State 77

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   22    | exp ">=" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "-"  shift, and go to state 47
    "+"  shift, and go to state 50
    "*"  shift, and go to state 51

    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 22 (exp)

    Conflict between rule 22 and token "&" resolved as reduce ("&" < ">=").
    Conflict between rule 22 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 22 and token "=" resolved as reduce ("=" < ">=").
    Conflict between rule 22 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 22 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 22 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 22 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 22 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 22 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 22 and token "|" resolved as reduce ("|" < ">=").
    Conflict between rule 22 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 22 and token "*" resolved as shift (">=" < "*").


State 78

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   20    | exp ">" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "-"  shift, and go to state 47
    "+"  shift, and go to state 50
    "*"  shift, and go to state 51

    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 20 (exp)

    Conflict between rule 20 and token "&" resolved as reduce ("&" < ">").
    Conflict between rule 20 and token "/" resolved as shift (">" < "/").
    Conflict between rule 20 and token "=" resolved as reduce ("=" < ">").
    Conflict between rule 20 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 20 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 20 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 20 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 20 and token "-" resolved as shift (">" < "-").
    Conflict between rule 20 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 20 and token "|" resolved as reduce ("|" < ">").
    Conflict between rule 20 and token "+" resolved as shift (">" < "+").
    Conflict between rule 20 and token "*" resolved as shift (">" < "*").


State 79

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   23    | exp "<=" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "-"  shift, and go to state 47
    "+"  shift, and go to state 50
    "*"  shift, and go to state 51

    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 23 (exp)

    Conflict between rule 23 and token "&" resolved as reduce ("&" < "<=").
    Conflict between rule 23 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 23 and token "=" resolved as reduce ("=" < "<=").
    Conflict between rule 23 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 23 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 23 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 23 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 23 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 23 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 23 and token "|" resolved as reduce ("|" < "<=").
    Conflict between rule 23 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 23 and token "*" resolved as shift ("<=" < "*").


State 80

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   21    | exp "<" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "-"  shift, and go to state 47
    "+"  shift, and go to state 50
    "*"  shift, and go to state 51

    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 21 (exp)

    Conflict between rule 21 and token "&" resolved as reduce ("&" < "<").
    Conflict between rule 21 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 21 and token "=" resolved as reduce ("=" < "<").
    Conflict between rule 21 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 21 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 21 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 21 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 21 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 21 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 21 and token "|" resolved as reduce ("|" < "<").
    Conflict between rule 21 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 21 and token "*" resolved as shift ("<" < "*").


State 81

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   16    | exp "-" exp •  ["end of file", "&", ",", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "to"]
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "*"  shift, and go to state 51

    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 16 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 16 and token "=" resolved as reduce ("=" < "-").
    Conflict between rule 16 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 16 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 16 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 16 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 16 and token "-" resolved as reduce (%left "-").
    Conflict between rule 16 and token "<>" resolved as reduce ("<>" < "-").
    Conflict between rule 16 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 16 and token "+" resolved as reduce (%left "+").
    Conflict between rule 16 and token "*" resolved as shift ("-" < "*").


State 82

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   19    | exp "<>" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "-"  shift, and go to state 47
    "+"  shift, and go to state 50
    "*"  shift, and go to state 51

    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 19 (exp)

    Conflict between rule 19 and token "&" resolved as reduce ("&" < "<>").
    Conflict between rule 19 and token "/" resolved as shift ("<>" < "/").
    Conflict between rule 19 and token "=" resolved as reduce ("=" < "<>").
    Conflict between rule 19 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 19 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 19 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 19 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 19 and token "-" resolved as shift ("<>" < "-").
    Conflict between rule 19 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 19 and token "|" resolved as reduce ("|" < "<>").
    Conflict between rule 19 and token "+" resolved as shift ("<>" < "+").
    Conflict between rule 19 and token "*" resolved as shift ("<>" < "*").


State 83

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   25    | exp "|" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "|", "}", "]", ")", ";", "then", "to"]
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 25 (exp)

    Conflict between rule 25 and token "&" resolved as shift ("|" < "&").
    Conflict between rule 25 and token "/" resolved as shift ("|" < "/").
    Conflict between rule 25 and token "=" resolved as reduce ("=" < "|").
    Conflict between rule 25 and token ">=" resolved as shift ("|" < ">=").
    Conflict between rule 25 and token ">" resolved as shift ("|" < ">").
    Conflict between rule 25 and token "<=" resolved as shift ("|" < "<=").
    Conflict between rule 25 and token "<" resolved as shift ("|" < "<").
    Conflict between rule 25 and token "-" resolved as shift ("|" < "-").
    Conflict between rule 25 and token "<>" resolved as shift ("|" < "<>").
    Conflict between rule 25 and token "|" resolved as reduce (%left "|").
    Conflict between rule 25 and token "+" resolved as shift ("|" < "+").
    Conflict between rule 25 and token "*" resolved as shift ("|" < "*").


State 84

   15 exp: exp • "+" exp
   15    | exp "+" exp •  ["end of file", "&", ",", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "to"]
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "/"  shift, and go to state 41
    "*"  shift, and go to state 51

    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token "&" resolved as reduce ("&" < "+").
    Conflict between rule 15 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 15 and token "=" resolved as reduce ("=" < "+").
    Conflict between rule 15 and token ">=" resolved as reduce (">=" < "+").
    Conflict between rule 15 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 15 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 15 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 15 and token "-" resolved as reduce (%left "-").
    Conflict between rule 15 and token "<>" resolved as reduce ("<>" < "+").
    Conflict between rule 15 and token "|" resolved as reduce ("|" < "+").
    Conflict between rule 15 and token "+" resolved as reduce (%left "+").
    Conflict between rule 15 and token "*" resolved as shift ("+" < "*").


State 85

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   26    | exp "*" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "*", "to"]

    $default  reduce using rule 26 (exp)

    Conflict between rule 26 and token "&" resolved as reduce ("&" < "*").
    Conflict between rule 26 and token "/" resolved as reduce (%left "/").
    Conflict between rule 26 and token "=" resolved as reduce ("=" < "*").
    Conflict between rule 26 and token ">=" resolved as reduce (">=" < "*").
    Conflict between rule 26 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 26 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 26 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 26 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 26 and token "<>" resolved as reduce ("<>" < "*").
    Conflict between rule 26 and token "|" resolved as reduce ("|" < "*").
    Conflict between rule 26 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 26 and token "*" resolved as reduce (%left "*").


State 86

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   28    | lvalue ":=" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "}", "]", ")", ";", "then", "to"]

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    "="       [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)

    Conflict between rule 28 and token "&" resolved as shift (":=" < "&").
    Conflict between rule 28 and token "/" resolved as shift (":=" < "/").
    Conflict between rule 28 and token ">=" resolved as shift (":=" < ">=").
    Conflict between rule 28 and token ">" resolved as shift (":=" < ">").
    Conflict between rule 28 and token "<=" resolved as shift (":=" < "<=").
    Conflict between rule 28 and token "<" resolved as shift (":=" < "<").
    Conflict between rule 28 and token "-" resolved as shift (":=" < "-").
    Conflict between rule 28 and token "<>" resolved as shift (":=" < "<>").
    Conflict between rule 28 and token "|" resolved as shift (":=" < "|").
    Conflict between rule 28 and token "+" resolved as shift (":=" < "+").
    Conflict between rule 28 and token "*" resolved as shift (":=" < "*").

    shift/reduce conflict on token "=":
       28 exp: lvalue ":=" exp •
       18 exp: exp • "=" exp
      Example: lvalue ":=" exp • "=" exp
      Shift derivation
        exp
        ↳ 28: lvalue ":=" exp
                          ↳ 18: exp • "=" exp
      Reduce derivation
        exp
        ↳ 18: exp                     "=" exp
              ↳ 28: lvalue ":=" exp •



State 87

   41 lvalue: lvalue "." "identifier" •

    $default  reduce using rule 41 (lvalue)


State 88

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   42 lvalue: lvalue "[" exp • "]"

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "]"   shift, and go to state 113
    "*"   shift, and go to state 51


State 89

   37 exp.1: "identifier" • "=" exp exp.2

    "="  shift, and go to state 114


State 90

   11 exp: typeid "{" exp.1 • "}"

    "}"  shift, and go to state 115


State 91

   10 exp: typeid "[" exp • "]" "of" exp
   15    | exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "]"   shift, and go to state 116
    "*"   shift, and go to state 51


State 92

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   46 exp3.1: "," • exp exp3.1
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 117
    lvalue  go to state 19
    typeid  go to state 23


State 93

   44 exp3: exp exp3.1 •

    $default  reduce using rule 44 (exp3)


State 94

   13 exp: "identifier" "(" exp3 ")" •

    $default  reduce using rule 13 (exp)


State 95

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   31    | "for" "identifier" ":=" exp • "to" exp "do" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51
    "to"  shift, and go to state 118


State 96

   61 tyfield: "identifier" • ":" typeid

    ":"  shift, and go to state 119


State 97

   65 funchunk: "function" "identifier" "(" tyfields • ")" colontypeid "=" exp

    ")"  shift, and go to state 120


State 98

   58 tyfields: tyfields.1 •  ["}", ")"]
   59 tyfields.1: tyfields.1 • "," tyfield

    ","  shift, and go to state 121

    $default  reduce using rule 58 (tyfields)


State 99

   60 tyfields.1: tyfield •

    $default  reduce using rule 60 (tyfields.1)


State 100

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   29    | "if" exp "then" exp • elserule
   34 elserule: ε •  ["end of file", "&", ",", "/", "do", "else", "end", "=", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "}", "]", ")", ";", "then", "*", "to"]
   35         | • "else" exp

    "&"     shift, and go to state 40
    "/"     shift, and go to state 41
    "else"  shift, and go to state 122
    "="     shift, and go to state 42
    ">="    shift, and go to state 43
    ">"     shift, and go to state 44
    "<="    shift, and go to state 45
    "<"     shift, and go to state 46
    "-"     shift, and go to state 47
    "<>"    shift, and go to state 48
    "|"     shift, and go to state 49
    "+"     shift, and go to state 50
    "*"     shift, and go to state 51

    "&"       [reduce using rule 34 (elserule)]
    "/"       [reduce using rule 34 (elserule)]
    "else"    [reduce using rule 34 (elserule)]
    "="       [reduce using rule 34 (elserule)]
    ">="      [reduce using rule 34 (elserule)]
    ">"       [reduce using rule 34 (elserule)]
    "<="      [reduce using rule 34 (elserule)]
    "<"       [reduce using rule 34 (elserule)]
    "-"       [reduce using rule 34 (elserule)]
    "<>"      [reduce using rule 34 (elserule)]
    "|"       [reduce using rule 34 (elserule)]
    "+"       [reduce using rule 34 (elserule)]
    "*"       [reduce using rule 34 (elserule)]
    $default  reduce using rule 34 (elserule)

    elserule  go to state 123

    shift/reduce conflict on token "+":
       34 elserule: ε •
       15 exp: exp • "+" exp
      First example: "if" "if" exp "then" exp • "+" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 15: exp • "+" exp
      Second example: "if" exp "if" exp "then" exp • "+" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 15: exp                                 "+" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "-":
       34 elserule: ε •
       16 exp: exp • "-" exp
      First example: "if" "if" exp "then" exp • "-" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 16: exp • "-" exp
      Second example: "if" exp "if" exp "then" exp • "-" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 16: exp                                 "-" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "/":
       34 elserule: ε •
       17 exp: exp • "/" exp
      First example: "if" "if" exp "then" exp • "/" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 17: exp • "/" exp
      Second example: "if" exp "if" exp "then" exp • "/" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 17: exp                                 "/" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "=":
       34 elserule: ε •
       18 exp: exp • "=" exp
      First example: "if" "if" exp "then" exp • "=" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 18: exp • "=" exp
      Second example: "if" exp "if" exp "then" exp • "=" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 18: exp                                 "=" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "<>":
       34 elserule: ε •
       19 exp: exp • "<>" exp
      First example: "if" "if" exp "then" exp • "<>" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                            elserule
                            ↳ 29: "then" exp                  exp elserule
                                         ↳ 19: exp • "<>" exp
      Second example: "if" exp "if" exp "then" exp • "<>" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                                elserule
                       ↳ 19: exp                                 "<>" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token ">":
       34 elserule: ε •
       20 exp: exp • ">" exp
      First example: "if" "if" exp "then" exp • ">" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 20: exp • ">" exp
      Second example: "if" exp "if" exp "then" exp • ">" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 20: exp                                 ">" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "<":
       34 elserule: ε •
       21 exp: exp • "<" exp
      First example: "if" "if" exp "then" exp • "<" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 21: exp • "<" exp
      Second example: "if" exp "if" exp "then" exp • "<" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 21: exp                                 "<" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token ">=":
       34 elserule: ε •
       22 exp: exp • ">=" exp
      First example: "if" "if" exp "then" exp • ">=" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                            elserule
                            ↳ 29: "then" exp                  exp elserule
                                         ↳ 22: exp • ">=" exp
      Second example: "if" exp "if" exp "then" exp • ">=" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                                elserule
                       ↳ 22: exp                                 ">=" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "<=":
       34 elserule: ε •
       23 exp: exp • "<=" exp
      First example: "if" "if" exp "then" exp • "<=" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                            elserule
                            ↳ 29: "then" exp                  exp elserule
                                         ↳ 23: exp • "<=" exp
      Second example: "if" exp "if" exp "then" exp • "<=" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                                elserule
                       ↳ 23: exp                                 "<=" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "&":
       34 elserule: ε •
       24 exp: exp • "&" exp
      First example: "if" "if" exp "then" exp • "&" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 24: exp • "&" exp
      Second example: "if" exp "if" exp "then" exp • "&" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 24: exp                                 "&" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "|":
       34 elserule: ε •
       25 exp: exp • "|" exp
      First example: "if" "if" exp "then" exp • "|" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 25: exp • "|" exp
      Second example: "if" exp "if" exp "then" exp • "|" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 25: exp                                 "|" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "*":
       34 elserule: ε •
       26 exp: exp • "*" exp
      First example: "if" "if" exp "then" exp • "*" exp exp elserule elserule
      Shift derivation
        exp
        ↳ 29: "if" "if" exp exp                                           elserule
                            ↳ 29: "then" exp                 exp elserule
                                         ↳ 26: exp • "*" exp
      Second example: "if" exp "if" exp "then" exp • "*" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp exp                                               elserule
                       ↳ 26: exp                                 "*" exp ↳ 29: ε
                             ↳ 29: "if" exp "then" exp elserule
                                                       ↳ 34: ε •

    shift/reduce conflict on token "else":
       34 elserule: ε •
       35 elserule: • "else" exp
      Example: "if" exp "then" "if" exp "then" exp • "else" exp
      Shift derivation
        exp
        ↳ 29: "if" exp "then" exp                                          elserule
                              ↳ 29: "if" exp "then" exp elserule           ↳ 29: ε
                                                        ↳ 35: • "else" exp
      Reduce derivation
        exp
        ↳ 29: "if" exp "then" exp                                 elserule
                              ↳ 29: "if" exp "then" exp elserule  ↳ 35: "else" exp
                                                        ↳ 34: ε •



State 101

   33 exp: "let" chunks "in" exps • "end"

    "end"  shift, and go to state 124


State 102

    5 exps.aux: ε •  ["end", ")"]
    6         | • ";" exp exps.aux
    6         | ";" exp • exps.aux
   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    ";"   shift, and go to state 66
    "*"   shift, and go to state 51

    $default  reduce using rule 5 (exps.aux)

    exps.aux  go to state 125


State 103

   66 funchunk: "primitive" "identifier" "(" tyfields • ")" colontypeid

    ")"  shift, and go to state 126


State 104

   62 typeid: "identifier" •

    $default  reduce using rule 62 (typeid)


State 105

   56 ty: "array" • "of" typeid

    "of"  shift, and go to state 127


State 106

   55 ty: "{" • tyfields "}"
   57 tyfields: ε •  ["}"]
   58         | • tyfields.1
   59 tyfields.1: • tyfields.1 "," tyfield
   60           | • tyfield
   61 tyfield: • "identifier" ":" typeid

    "identifier"  shift, and go to state 96

    $default  reduce using rule 57 (tyfields)

    tyfields    go to state 128
    tyfields.1  go to state 98
    tyfield     go to state 99


State 107

   53 tydec: "type" "identifier" "=" ty •

    $default  reduce using rule 53 (tydec)


State 108

   54 ty: typeid •

    $default  reduce using rule 54 (ty)


State 109

   68 colontypeid: ":" typeid •

    $default  reduce using rule 68 (colontypeid)


State 110

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"
   64 vardec: "var" "identifier" colontypeid ":=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 129
    lvalue  go to state 19
    typeid  go to state 23


State 111

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   30    | "while" exp "do" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "}", "]", ")", ";", "then", "to"]

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    "="       [reduce using rule 30 (exp)]
    $default  reduce using rule 30 (exp)

    Conflict between rule 30 and token "&" resolved as shift ("do" < "&").
    Conflict between rule 30 and token "/" resolved as shift ("do" < "/").
    Conflict between rule 30 and token ">=" resolved as shift ("do" < ">=").
    Conflict between rule 30 and token ">" resolved as shift ("do" < ">").
    Conflict between rule 30 and token "<=" resolved as shift ("do" < "<=").
    Conflict between rule 30 and token "<" resolved as shift ("do" < "<").
    Conflict between rule 30 and token "-" resolved as shift ("do" < "-").
    Conflict between rule 30 and token "<>" resolved as shift ("do" < "<>").
    Conflict between rule 30 and token "|" resolved as shift ("do" < "|").
    Conflict between rule 30 and token "+" resolved as shift ("do" < "+").
    Conflict between rule 30 and token "*" resolved as shift ("do" < "*").

    shift/reduce conflict on token "=":
       30 exp: "while" exp "do" exp •
       18 exp: exp • "=" exp
      Example: "while" exp "do" exp • "=" exp
      Shift derivation
        exp
        ↳ 30: "while" exp "do" exp
                               ↳ 18: exp • "=" exp
      Reduce derivation
        exp
        ↳ 18: exp                          "=" exp
              ↳ 30: "while" exp "do" exp •



State 112

   63 typeid: "_namety" "(" "integer" ")" •

    $default  reduce using rule 63 (typeid)


State 113

   42 lvalue: lvalue "[" exp "]" •

    $default  reduce using rule 42 (lvalue)


State 114

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   37 exp.1: "identifier" "=" • exp exp.2
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 130
    lvalue  go to state 19
    typeid  go to state 23


State 115

   11 exp: typeid "{" exp.1 "}" •

    $default  reduce using rule 11 (exp)


State 116

   10 exp: typeid "[" exp "]" • "of" exp

    "of"  shift, and go to state 131


State 117

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   45 exp3.1: ε •  [")"]
   46       | • "," exp exp3.1
   46       | "," exp • exp3.1

    "&"   shift, and go to state 40
    ","   shift, and go to state 92
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 45 (exp3.1)

    exp3.1  go to state 132


State 118

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   31    | "for" "identifier" ":=" exp "to" • exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 133
    lvalue  go to state 19
    typeid  go to state 23


State 119

   61 tyfield: "identifier" ":" • typeid
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 104
    "_namety"     shift, and go to state 16

    typeid  go to state 134


State 120

   65 funchunk: "function" "identifier" "(" tyfields ")" • colontypeid "=" exp
   67 colontypeid: ε •  ["="]
   68            | • ":" typeid

    ":"  shift, and go to state 70

    $default  reduce using rule 67 (colontypeid)

    colontypeid  go to state 135


State 121

   59 tyfields.1: tyfields.1 "," • tyfield
   61 tyfield: • "identifier" ":" typeid

    "identifier"  shift, and go to state 96

    tyfield  go to state 136


State 122

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   35 elserule: "else" • exp
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 137
    lvalue  go to state 19
    typeid  go to state 23


State 123

   29 exp: "if" exp "then" exp elserule •

    $default  reduce using rule 29 (exp)


State 124

   33 exp: "let" chunks "in" exps "end" •

    $default  reduce using rule 33 (exp)


State 125

    6 exps.aux: ";" exp exps.aux •

    $default  reduce using rule 6 (exps.aux)


State 126

   66 funchunk: "primitive" "identifier" "(" tyfields ")" • colontypeid
   67 colontypeid: ε •  ["end of file", "in"]
   68            | • ":" typeid

    ":"  shift, and go to state 70

    $default  reduce using rule 67 (colontypeid)

    colontypeid  go to state 138


State 127

   56 ty: "array" "of" • typeid
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "identifier"  shift, and go to state 104
    "_namety"     shift, and go to state 16

    typeid  go to state 139


State 128

   55 ty: "{" tyfields • "}"

    "}"  shift, and go to state 140


State 129

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   64 vardec: "var" "identifier" colontypeid ":=" exp •  ["end of file", "in"]

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 64 (vardec)


State 130

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   37 exp.1: "identifier" "=" exp • exp.2
   38 exp.2: ε •  ["}"]
   39      | • "," "identifier" "=" exp exp.2

    "&"   shift, and go to state 40
    ","   shift, and go to state 141
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 38 (exp.2)

    exp.2  go to state 142


State 131

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   10    | typeid "[" exp "]" "of" • exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 143
    lvalue  go to state 19
    typeid  go to state 23


State 132

   46 exp3.1: "," exp exp3.1 •

    $default  reduce using rule 46 (exp3.1)


State 133

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   31    | "for" "identifier" ":=" exp "to" exp • "do" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "do"  shift, and go to state 144
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51


State 134

   61 tyfield: "identifier" ":" typeid •

    $default  reduce using rule 61 (tyfield)


State 135

   65 funchunk: "function" "identifier" "(" tyfields ")" colontypeid • "=" exp

    "="  shift, and go to state 145


State 136

   59 tyfields.1: tyfields.1 "," tyfield •

    $default  reduce using rule 59 (tyfields.1)


State 137

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   35 elserule: "else" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "}", "]", ")", ";", "then", "to"]

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    "="       [reduce using rule 35 (elserule)]
    $default  reduce using rule 35 (elserule)

    Conflict between rule 35 and token "&" resolved as shift ("else" < "&").
    Conflict between rule 35 and token "/" resolved as shift ("else" < "/").
    Conflict between rule 35 and token ">=" resolved as shift ("else" < ">=").
    Conflict between rule 35 and token ">" resolved as shift ("else" < ">").
    Conflict between rule 35 and token "<=" resolved as shift ("else" < "<=").
    Conflict between rule 35 and token "<" resolved as shift ("else" < "<").
    Conflict between rule 35 and token "-" resolved as shift ("else" < "-").
    Conflict between rule 35 and token "<>" resolved as shift ("else" < "<>").
    Conflict between rule 35 and token "|" resolved as shift ("else" < "|").
    Conflict between rule 35 and token "+" resolved as shift ("else" < "+").
    Conflict between rule 35 and token "*" resolved as shift ("else" < "*").

    shift/reduce conflict on token "=":
       35 elserule: "else" exp •
       18 exp: exp • "=" exp
      Example: "if" exp "then" exp "else" exp • "=" exp
      Shift derivation
        exp
        ↳ 29: "if" exp "then" exp elserule
                                  ↳ 35: "else" exp
                                               ↳ 18: exp • "=" exp
      Reduce derivation
        exp
        ↳ 18: exp                                          "=" exp
              ↳ 29: "if" exp "then" exp elserule
                                        ↳ 35: "else" exp •



State 138

   66 funchunk: "primitive" "identifier" "(" tyfields ")" colontypeid •

    $default  reduce using rule 66 (funchunk)


State 139

   56 ty: "array" "of" typeid •

    $default  reduce using rule 56 (ty)


State 140

   55 ty: "{" tyfields "}" •

    $default  reduce using rule 55 (ty)


State 141

   39 exp.2: "," • "identifier" "=" exp exp.2

    "identifier"  shift, and go to state 146


State 142

   37 exp.1: "identifier" "=" exp exp.2 •

    $default  reduce using rule 37 (exp.1)


State 143

   10 exp: typeid "[" exp "]" "of" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "}", "]", ")", ";", "then", "to"]
   15    | exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    "="       [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)

    Conflict between rule 10 and token "&" resolved as shift ("of" < "&").
    Conflict between rule 10 and token "/" resolved as shift ("of" < "/").
    Conflict between rule 10 and token ">=" resolved as shift ("of" < ">=").
    Conflict between rule 10 and token ">" resolved as shift ("of" < ">").
    Conflict between rule 10 and token "<=" resolved as shift ("of" < "<=").
    Conflict between rule 10 and token "<" resolved as shift ("of" < "<").
    Conflict between rule 10 and token "-" resolved as shift ("of" < "-").
    Conflict between rule 10 and token "<>" resolved as shift ("of" < "<>").
    Conflict between rule 10 and token "|" resolved as shift ("of" < "|").
    Conflict between rule 10 and token "+" resolved as shift ("of" < "+").
    Conflict between rule 10 and token "*" resolved as shift ("of" < "*").

    shift/reduce conflict on token "=":
       10 exp: typeid "[" exp "]" "of" exp •
       18 exp: exp • "=" exp
      Example: typeid "[" exp "]" "of" exp • "=" exp
      Shift derivation
        exp
        ↳ 10: typeid "[" exp "]" "of" exp
                                      ↳ 18: exp • "=" exp
      Reduce derivation
        exp
        ↳ 18: exp                                 "=" exp
              ↳ 10: typeid "[" exp "]" "of" exp •



State 144

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   31    | "for" "identifier" ":=" exp "to" exp "do" • exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 147
    lvalue  go to state 19
    typeid  go to state 23


State 145

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"
   65 funchunk: "function" "identifier" "(" tyfields ")" colontypeid "=" • exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 148
    lvalue  go to state 19
    typeid  go to state 23


State 146

   39 exp.2: "," "identifier" • "=" exp exp.2

    "="  shift, and go to state 149


State 147

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   31    | "for" "identifier" ":=" exp "to" exp "do" exp •  ["end of file", ",", "do", "else", "end", "=", "in", "}", "]", ")", ";", "then", "to"]

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    "="       [reduce using rule 31 (exp)]
    $default  reduce using rule 31 (exp)

    Conflict between rule 31 and token "&" resolved as shift ("do" < "&").
    Conflict between rule 31 and token "/" resolved as shift ("do" < "/").
    Conflict between rule 31 and token ">=" resolved as shift ("do" < ">=").
    Conflict between rule 31 and token ">" resolved as shift ("do" < ">").
    Conflict between rule 31 and token "<=" resolved as shift ("do" < "<=").
    Conflict between rule 31 and token "<" resolved as shift ("do" < "<").
    Conflict between rule 31 and token "-" resolved as shift ("do" < "-").
    Conflict between rule 31 and token "<>" resolved as shift ("do" < "<>").
    Conflict between rule 31 and token "|" resolved as shift ("do" < "|").
    Conflict between rule 31 and token "+" resolved as shift ("do" < "+").
    Conflict between rule 31 and token "*" resolved as shift ("do" < "*").

    shift/reduce conflict on token "=":
       31 exp: "for" "identifier" ":=" exp "to" exp "do" exp •
       18 exp: exp • "=" exp
      Example: "for" "identifier" ":=" exp "to" exp "do" exp • "=" exp
      Shift derivation
        exp
        ↳ 31: "for" "identifier" ":=" exp "to" exp "do" exp
                                                        ↳ 18: exp • "=" exp
      Reduce derivation
        exp
        ↳ 18: exp                                                   "=" exp
              ↳ 31: "for" "identifier" ":=" exp "to" exp "do" exp •



State 148

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   65 funchunk: "function" "identifier" "(" tyfields ")" colontypeid "=" exp •  ["end of file", "in"]

    "&"   shift, and go to state 40
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 65 (funchunk)


State 149

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • typeid "[" exp "]" "of" exp
   11    | • typeid "{" exp.1 "}"
   12    | • lvalue
   13    | • "identifier" "(" exp3 ")"
   14    | • "-" exp
   15    | • exp "+" exp
   16    | • exp "-" exp
   17    | • exp "/" exp
   18    | • exp "=" exp
   19    | • exp "<>" exp
   20    | • exp ">" exp
   21    | • exp "<" exp
   22    | • exp ">=" exp
   23    | • exp "<=" exp
   24    | • exp "&" exp
   25    | • exp "|" exp
   26    | • exp "*" exp
   27    | • "(" exps ")"
   28    | • lvalue ":=" exp
   29    | • "if" exp "then" exp elserule
   30    | • "while" exp "do" exp
   31    | • "for" "identifier" ":=" exp "to" exp "do" exp
   32    | • "break"
   33    | • "let" chunks "in" exps "end"
   39 exp.2: "," "identifier" "=" • exp exp.2
   40 lvalue: • "identifier"
   41       | • lvalue "." "identifier"
   42       | • lvalue "[" exp "]"
   62 typeid: • "identifier"
   63       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "if"          shift, and go to state 7
    "let"         shift, and go to state 8
    "("           shift, and go to state 9
    "-"           shift, and go to state 10
    "nil"         shift, and go to state 11
    "while"       shift, and go to state 15
    "_namety"     shift, and go to state 16

    exp     go to state 150
    lvalue  go to state 19
    typeid  go to state 23


State 150

   15 exp: exp • "+" exp
   16    | exp • "-" exp
   17    | exp • "/" exp
   18    | exp • "=" exp
   19    | exp • "<>" exp
   20    | exp • ">" exp
   21    | exp • "<" exp
   22    | exp • ">=" exp
   23    | exp • "<=" exp
   24    | exp • "&" exp
   25    | exp • "|" exp
   26    | exp • "*" exp
   38 exp.2: ε •  ["}"]
   39      | • "," "identifier" "=" exp exp.2
   39      | "," "identifier" "=" exp • exp.2

    "&"   shift, and go to state 40
    ","   shift, and go to state 141
    "/"   shift, and go to state 41
    "="   shift, and go to state 42
    ">="  shift, and go to state 43
    ">"   shift, and go to state 44
    "<="  shift, and go to state 45
    "<"   shift, and go to state 46
    "-"   shift, and go to state 47
    "<>"  shift, and go to state 48
    "|"   shift, and go to state 49
    "+"   shift, and go to state 50
    "*"   shift, and go to state 51

    $default  reduce using rule 38 (exp.2)

    exp.2  go to state 151


State 151

   39 exp.2: "," "identifier" "=" exp exp.2 •

    $default  reduce using rule 39 (exp.2)
